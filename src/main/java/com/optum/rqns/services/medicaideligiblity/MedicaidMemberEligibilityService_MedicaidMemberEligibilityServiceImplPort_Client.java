
package com.optum.rqns.services.medicaideligiblity;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;

import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import com.optum.rqns.services.medicaideligiblity.MedicaidMemberEligibilityDetails;
import com.optum.rqns.services.medicaideligiblity.MedicaidMemberEligibilityService;
import com.optum.rqns.services.medicaideligiblity.MedicaidMemberEligibilityService_Service;
import com.optum.rqns.services.medicaideligiblity.ServiceException_Exception;
import com.optum.rqns.services.utils.DataBaseConnect;
import com.optum.rqns.services.utils.Utility;

/**
 * This class was generated by Apache CXF 2.7.18
 * 2017-07-25T16:51:33.445+05:30
 * Generated source version: 2.7.18
 * 
 */
public final class MedicaidMemberEligibilityService_MedicaidMemberEligibilityServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://services.rqns.optum.com/", "medicaidMemberEligibilityService");

    public MedicaidMemberEligibilityService_MedicaidMemberEligibilityServiceImplPort_Client() {
    }

    public  String medicaidMeberEligiblity() throws java.lang.Exception {
    	/*System.setProperty("javax.net.ssl.keyStore","C:/CRQS/Webservices/Soap/rqns_tst.jks");
        System.setProperty("javax.net.ssl.keyStorePassword","changeit");
        System.setProperty("javax.net.ssl.trustStore","C:/CRQS/Webservices/Soap/cpc_client_truststore.jks");
        System.setProperty("javax.net.ssl.trustStorePassword","changeit");*/
        com.optum.rqns.services.medicaideligiblity.GetEligibleMcaidMembersByGlbMbrIDAndClient _getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClient = new com.optum.rqns.services.medicaideligiblity.GetEligibleMcaidMembersByGlbMbrIDAndClient();
        String enrlBegDt="";
        String enrlEndDt="";
        String globalMemberID="";
        String lobID="";
        String lobIDDesc="";
        String memberID="";
        String modifierID="";
        String planDesc="";
        String planNumber="";
        String programTypeCd="";
        String sReturn="";
        String clientName="";
        String sSecondreturn="";
         
        URL wsdlURL = MedicaidMemberEligibilityService_Service.WSDL_LOCATION;
      
      
        MedicaidMemberEligibilityService_Service ss = new MedicaidMemberEligibilityService_Service(wsdlURL, SERVICE_NAME);
        MedicaidMemberEligibilityService port = ss.getMedicaidMemberEligibilityServiceImplPort();  
        
        
        String sRequestSqlFinal="";
        {
        String sRequestSql="select count(*) from (select m_adj.mbr_id,m_adj.mbr_mod_id,m_adj.mbr_sub_pln_adj_strt_dt,m_adj.mbr_sub_pln_adj_end_dt,m_glb.mbr_glb_id,vw_clnt.sub_cli_org_nm,vw_clnt.clnt_guid from";
        sRequestSql=sRequestSql+" MBR_ENRL_ADJ m_adj ,CS_MBR_GLB_ID m_glb,vw_cs_clnt_guid_mod vw_clnt where m_adj.mbr_id=m_glb.mbr_id and m_adj.mbr_mod_id=m_glb.mbr_mod_id";
        sRequestSql=sRequestSql+" and vw_clnt.sub_cli_sk=m_adj.sub_cli_sk and m_adj.sub_cli_sk=m_glb.sub_cli_sk  and m_glb.mbr_glb_id is  not null order by m_adj.mbr_sub_pln_adj_strt_dt desc ) where rownum=1";
        ResultSet rs=DataBaseConnect.getRsList("STAGE", sRequestSql);
        int iCount=0;
         while (rs.next()){
         	iCount = rs.getInt(1);
         }
         
         if (iCount==1)
         {
        	  sRequestSqlFinal="select m_adj.mbr_id as mbr_id,m_adj.mbr_mod_id,m_adj.mbr_sub_pln_adj_strt_dt,m_adj.mbr_sub_pln_adj_end_dt,m_glb.mbr_glb_id,vw_clnt.sub_cli_org_nm,vw_clnt.clnt_guid,m_adj.mbr_sbscr_id,m_adj.MBR_CONTR_NBR,m_adj.LOB_TYPE_ID from";
        	  sRequestSqlFinal=sRequestSqlFinal+" MBR_ENRL_ADJ m_adj ,CS_MBR_GLB_ID m_glb,vw_cs_clnt_guid_mod vw_clnt where m_adj.mbr_id=m_glb.mbr_id and m_adj.mbr_mod_id=m_glb.mbr_mod_id";
        	  sRequestSqlFinal=sRequestSqlFinal+" and vw_clnt.sub_cli_sk=m_adj.sub_cli_sk and m_adj.sub_cli_sk=m_glb.sub_cli_sk  and m_glb.mbr_glb_id is  not null and vw_clnt.ins_catg_cd='MD' order by m_adj.mbr_sub_pln_adj_strt_dt desc ";
         System.out.println(sRequestSqlFinal);
         	ResultSet rs1=DataBaseConnect.getRsList("STAGE", sRequestSqlFinal);
         	 while (rs1.next()){
         		System.out.println(rs1.getString(3));
                _getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClient.setEligStrtDt(Utility.formatDateForService(rs1.getString(3)));
                _getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClient.setEligEndDt(Utility.formatDateForService(rs1.getString(4)));
                _getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClient.setClientName(rs1.getString(6));
                _getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClient.setGlobalMemberID(rs1.getString(5));
         		
                 enrlBegDt=rs1.getString(3);
                enrlEndDt=rs1.getString(4);
                globalMemberID=rs1.getString(5);
                clientName=rs1.getString(6);
                //lobID=rs1.getString(10);
                memberID=rs1.getString(1);
                modifierID=rs1.getString(2);
                planNumber=rs1.getString(9);

                
                
         		System.out.println( "From DB:");
         		for (int i=1;i<10;i++){
         			System.out.println(rs1.getString(i));
         		}
         		break;
         	 }

         }
         //  TEST00017	1128	01-AUG-14	30-APR-16	SS1234	United HealthCare Medicaid - NV
   /*     System.out.println("Invoking getEligibleMcaidMembersByGlbMbrIDAndClient...");
      
       
        com.optum.rqns.services.medicaideligiblity.ServiceMetaData _getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClientMetaData = new com.optum.rqns.services.medicaideligiblity.ServiceMetaData();
        _getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClientMetaData.setAppId("9032afa9f3e34e6fd0e05e967be021f7");
        _getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClient.setMetaData(_getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClientMetaData);
        try {
            com.optum.rqns.services.medicaideligiblity.GetEligibleMcaidMembersByGlbMbrIDAndClientResponse _getEligibleMcaidMembersByGlbMbrIDAndClient__return = port.getEligibleMcaidMembersByGlbMbrIDAndClient(_getEligibleMcaidMembersByGlbMbrIDAndClient_getEligibleMcaidMembersByGlbMbrIDAndClient);
            
            System.out.println("getEligibleMcaidMembersByGlbMbrIDAndClient.result=" + _getEligibleMcaidMembersByGlbMbrIDAndClient__return);
            MedicaidMemberEligibilityDetails oRecord = _getEligibleMcaidMembersByGlbMbrIDAndClient__return.getEligibilityInfo().getMedicaidMemberEligibilityDetails().get(0);
           System.out.println("here is response");
           System.out.println("date " +oRecord.enrlBegDt);
           System.out.println(oRecord.enrlEndDt);
            
            
            
        
             if (Utility.formatDateForService(enrlBegDt).equals(oRecord.enrlBegDt) &&
            		Utility.formatDateForService(enrlEndDt).equals(oRecord.enrlEndDt) &&
                     globalMemberID.equals(oRecord.globalMemberID) &&
            		memberID.equals(oRecord.memberID) &&
            		modifierID.equals(oRecord.modifierID) &&
            		planNumber.equals(oRecord.planNumber))
      
					{
						
			
            	 sReturn="getEligibleMcaidMembersByGlbMbrIDAndClient  --------Passed:-------";
            	
            	 sReturn=sReturn+" ************************Request******************************************";
            	sReturn=sReturn+ " Global member iD:- " + globalMemberID;
            	sReturn=sReturn+ " Client Name:- " +clientName;
            	sReturn=sReturn+ " Start Date:- " +enrlBegDt;
            	sReturn=sReturn+ "End Date:- " +enrlEndDt;
            
            	
            	sReturn=sReturn+"************************Response******************************************";
            	sReturn=sReturn+ " Member ID:- " +oRecord.memberID;
            	sReturn=sReturn+ " Member Mod ID:- " +oRecord.modifierID;
            	sReturn=sReturn+ " Eligiblity source :- " +oRecord.eligibilitySource;
            	sReturn=sReturn+ " Enrolment begin date:- " +oRecord.enrlBegDt;
            	
            	sReturn=sReturn+ " Enrolment end date:- " +oRecord.enrlEndDt;
            	sReturn=sReturn+ " Global Member ID - " +oRecord.globalMemberID;
            	sReturn=sReturn+ " Lob ID:- " +oRecord.lobID;
            	sReturn=sReturn+ " Lob ID desc:- " +oRecord.lobIDDesc;
            	sReturn=sReturn+ " Plan Desc:- " +oRecord.planDesc;
            	sReturn=sReturn+ " plan number - " +oRecord.planNumber;
            	sReturn=sReturn+ " Program type code:- " +oRecord.programTypeCd;
            
            	
            }
            else
            {
            	sReturn="getEligibleMcaidMembersByGlbMbrIDAndClient  --------Failed:-------";
            	
            	 sReturn=sReturn+" ************************Request******************************************";
            		sReturn=sReturn+ " Global member iD:- " + globalMemberID;
                	sReturn=sReturn+ " Client Name:- " +clientName;
                	sReturn=sReturn+ " Start Date:- " +enrlBegDt;
                	sReturn=sReturn+ "End Date:- " +enrlEndDt;
           
           	
           	sReturn=sReturn+"************************Response******************************************";
        	sReturn=sReturn+ " Member ID:- " +oRecord.memberID;
        	sReturn=sReturn+ " Member Mod ID:- " +oRecord.modifierID;
        	sReturn=sReturn+ " Eligiblity source :- " +oRecord.eligibilitySource;
        	sReturn=sReturn+ " Enrolment begin date:- " +oRecord.enrlBegDt;
        	
        	sReturn=sReturn+ " Enrolment end date:- " +oRecord.enrlEndDt;
        	sReturn=sReturn+ " Global Member ID - " +oRecord.globalMemberID;
        	sReturn=sReturn+ " Lob ID:- " +oRecord.lobID;
        	sReturn=sReturn+ " Lob ID desc:- " +oRecord.lobIDDesc;
        	sReturn=sReturn+ " Plan Desc:- " +oRecord.planDesc;
        	sReturn=sReturn+ " plan number - " +oRecord.planNumber;
        	sReturn=sReturn+ " Program type code:- " +oRecord.programTypeCd;
            }
         
            
            //System.out.println(_getEligibleMcaidMembersByGlbMbrIDAndClient__return.getEligibilityInfo().getMedicaidMemberEligibilityDetails().get(0).globalMemberID);
        } catch (ServiceException_Exception e) { 
            System.out.println("Expected exception: ServiceException has occurred.");
            System.out.println(e.toString());
        }
          */  }
        {
        System.out.println("Invoking getEligibleMcaidMembersByMbrIDAndClient...");
        java.lang.String _getEligibleMcaidMembersByMbrIDAndClient_eligStrtDt = Utility.formatDateForService(enrlBegDt);
        java.lang.String _getEligibleMcaidMembersByMbrIDAndClient_eligEndDt =  Utility.formatDateForService(enrlEndDt);
        java.lang.String _getEligibleMcaidMembersByMbrIDAndClient_clientName =clientName;
        java.lang.String _getEligibleMcaidMembersByMbrIDAndClient_memberID = memberID;
        java.lang.String _getEligibleMcaidMembersByMbrIDAndClient_modifierID = modifierID;
        com.optum.rqns.services.medicaideligiblity.ServiceMetaData _getEligibleMcaidMembersByMbrIDAndClient_metaData = new com.optum.rqns.services.medicaideligiblity.ServiceMetaData();
        _getEligibleMcaidMembersByMbrIDAndClient_metaData.setAppId("9032afa9f3e34e6fd0e05e967be021f7");
        try {
            com.optum.rqns.services.medicaideligiblity.MedicaidMemberEligibilityInfo _getEligibleMcaidMembersByMbrIDAndClient__return = port.getEligibleMcaidMembersByMbrIDAndClient(_getEligibleMcaidMembersByMbrIDAndClient_eligStrtDt, _getEligibleMcaidMembersByMbrIDAndClient_eligEndDt, _getEligibleMcaidMembersByMbrIDAndClient_clientName, _getEligibleMcaidMembersByMbrIDAndClient_memberID, _getEligibleMcaidMembersByMbrIDAndClient_modifierID, _getEligibleMcaidMembersByMbrIDAndClient_metaData);
             MedicaidMemberEligibilityDetails oRecord = _getEligibleMcaidMembersByMbrIDAndClient__return.getMedicaidMemberEligibilityDetails().get(0);
            
            
            
            if (Utility.formatDateForService(enrlBegDt).equals(oRecord.enrlBegDt) &&
            		Utility.formatDateForService(enrlEndDt).equals(oRecord.enrlEndDt) &&
                     globalMemberID.equals(oRecord.globalMemberID) &&
            		memberID.equals(oRecord.memberID) &&
            		modifierID.equals(oRecord.modifierID) &&
            		planNumber.equals(oRecord.planNumber))
      
					{
						
			
            	sSecondreturn="getEligibleMcaidMembersByMbrIDAndClient  --------Passed:-------";
            	
            	 sSecondreturn=sSecondreturn+" ************************Request******************************************";
            	sSecondreturn=sSecondreturn+ " Member ID:- " + memberID;
            	sSecondreturn=sSecondreturn+ " Member Mod ID:- " +modifierID;
            	sSecondreturn=sSecondreturn+ " Client Name:- " +clientName;
            	sSecondreturn=sSecondreturn+ " Start Date:- " +enrlBegDt;
            	sSecondreturn=sSecondreturn+ "End Date:- " +enrlEndDt;
            
            	
            	sSecondreturn=sSecondreturn+"************************Response******************************************";
            	sSecondreturn=sSecondreturn+ " Member ID:- " +oRecord.memberID;
            	sSecondreturn=sSecondreturn+ " Member Mod ID:- " +oRecord.modifierID;
            	sSecondreturn=sSecondreturn+ " Eligiblity source :- " +oRecord.eligibilitySource;
            	sSecondreturn=sSecondreturn+ " Enrolment begin date:- " +oRecord.enrlBegDt;
            	
            	sSecondreturn=sSecondreturn+ " Enrolment end date:- " +oRecord.enrlEndDt;
            	sSecondreturn=sSecondreturn+ " Global Member ID - " +oRecord.globalMemberID;
            	sSecondreturn=sSecondreturn+ " Lob ID:- " +oRecord.lobID;
            	sSecondreturn=sSecondreturn+ " Lob ID desc:- " +oRecord.lobIDDesc;
            	sSecondreturn=sSecondreturn+ " Plan Desc:- " +oRecord.planDesc;
            	sSecondreturn=sSecondreturn+ " plan number - " +oRecord.planNumber;
            	sSecondreturn=sSecondreturn+ " Program type code:- " +oRecord.programTypeCd;
            
            	
            }
            else
            {
            	sSecondreturn="getEligibleMcaidMembersByMbrIDAndClient  --------Failed:-------";
            	
            	 sSecondreturn=sSecondreturn+" ************************Request******************************************";
             	sSecondreturn=sSecondreturn+ " Member ID:- " + memberID;
             	sSecondreturn=sSecondreturn+ " Member Mod ID:- " +modifierID;
             	sSecondreturn=sSecondreturn+ " Client Name:- " +clientName;
             	sSecondreturn=sSecondreturn+ " Start Date:- " +enrlBegDt;
            	sSecondreturn=sSecondreturn+ "End Date:- " +enrlEndDt;
           
           	
           	sSecondreturn=sSecondreturn+"************************Response******************************************";
        	sSecondreturn=sSecondreturn+ " Member ID:- " +oRecord.memberID;
        	sSecondreturn=sSecondreturn+ " Member Mod ID:- " +oRecord.modifierID;
        	sSecondreturn=sSecondreturn+ " Eligiblity source :- " +oRecord.eligibilitySource;
        	sSecondreturn=sSecondreturn+ " Enrolment begin date:- " +oRecord.enrlBegDt;
        	
        	sSecondreturn=sSecondreturn+ " Enrolment end date:- " +oRecord.enrlEndDt;
        	sSecondreturn=sSecondreturn+ " Global Member ID - " +oRecord.globalMemberID;
        	sSecondreturn=sSecondreturn+ " Lob ID:- " +oRecord.lobID;
        	sSecondreturn=sSecondreturn+ " Lob ID desc:- " +oRecord.lobIDDesc;
        	sSecondreturn=sSecondreturn+ " Plan Desc:- " +oRecord.planDesc;
        	sSecondreturn=sSecondreturn+ " plan number - " +oRecord.planNumber;
        	sSecondreturn=sSecondreturn+ " Program type code:- " +oRecord.programTypeCd;
            }

        } catch (ServiceException_Exception e) { 
            System.out.println("Expected exception: ServiceException has occurred.");
            System.out.println(e.toString());
        }
            }
    //    System.out.println(sReturn+sSecondreturn);
        return(sReturn+sSecondreturn);
        //System.exit(0);
    }

}
