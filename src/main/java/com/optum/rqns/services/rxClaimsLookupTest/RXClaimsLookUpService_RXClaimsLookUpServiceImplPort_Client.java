
package com.optum.rqns.services.rxClaimsLookupTest;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;

import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import com.optum.rqns.services.utils.DataBaseConnect;
import com.optum.rqns.services.utils.Utility;



/**
 * This class was generated by Apache CXF 2.7.18
 * 2017-08-07T14:57:27.866+05:30
 * Generated source version: 2.7.18
 * 
 */
public final class RXClaimsLookUpService_RXClaimsLookUpServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://services.rqns.optum.com/", "RXClaimsLookUpService");

    public RXClaimsLookUpService_RXClaimsLookUpServiceImplPort_Client() {
    }

    public  String rxClaimsLookup() throws java.lang.Exception {
    	 
        String smbrID="";
        String smbrModID="";
        String sCliID="";
        String sNdcCd="";
        String sNdcDesc="";
        String sProvFstNm="";
        String sProvLstNm="";
        String sProvMdlNm="";
        String sQty="";
        String sMbrGlobId="";
        String sReturn="";
        String sReturn1="";
        String sRequest="";
        URL wsdlURL = RXClaimsLookUpService_Service.WSDL_LOCATION;
      
        String RX_CLAIM_QUERY = " select a.mbr_id,  a.mbr_mod_id,a.clnt_guid, a.day_spl_cnt,  a.drg_qty,np.nppes_prov_fst_nm,";
        RX_CLAIM_QUERY =RX_CLAIM_QUERY +" np.nppes_prov_lst_nm, np.nppes_prov_midl_nm ,ndesc.ndc_cd,ndesc.ndc_desc from a_rx_clm_ndc a";
        RX_CLAIM_QUERY =RX_CLAIM_QUERY +" left join d_cs_mbr_glb_id d on (a.cli_sk = d.cli_sk and  a.sub_cli_sk =d.sub_cli_sk and";
        RX_CLAIM_QUERY =RX_CLAIM_QUERY +" a.mbr_id = d.mbr_id and  a.mbr_mod_id = d.mbr_mod_id)   left join d_nppes_prov np  ";
        RX_CLAIM_QUERY =RX_CLAIM_QUERY +" on( a.clnt_guid = np.clnt_guid and  a.rx_clm_prov_npi = np.nppes_prov_npi_id)";
        RX_CLAIM_QUERY =RX_CLAIM_QUERY +" left join d_ndc_cd ndesc  on (a.NDC_CD=ndesc.NDC_CD)  ";
        

        sRequest=RX_CLAIM_QUERY;
        RXClaimsLookUpService_Service ss = new RXClaimsLookUpService_Service(wsdlURL, SERVICE_NAME);
        RXClaimsLookUpService port = ss.getRXClaimsLookUpServiceImplPort();  
        
        {
        System.out.println("Invoking getRXClaimsByMbrIDAndClient...");
        
        try {
        	
        ResultSet rs=DataBaseConnect.getRsList("TEST-DW", RX_CLAIM_QUERY);
        int iCount=0;
         while (rs.next()){
        	 smbrID = rs.getString(1);
        	 smbrModID = rs.getString(2);
        	 sCliID = rs.getString(3);
        	 
        	 
        	  sNdcCd=rs.getString(9);
              sNdcDesc=rs.getString(10);
              sProvFstNm=rs.getString(6);
              sProvLstNm=rs.getString(7);
              sProvMdlNm=rs.getString(8);
              sQty=rs.getString(5);
              for (int i=1;i<11;i++)
              {sReturn1=sReturn1+rs.getString(i);
            	  System.out.println(rs.getString(i));
              }
              //sMbrGlobId=rs.getString(11);
            
        	 
         	break;
         }
      
        
         System.out.println("request");
         System.out.println(smbrID);
         System.out.println(smbrModID);
         System.out.println(sCliID);
        java.lang.String _getRXClaimsByMbrIDAndClient_memberIdentifier = smbrID;
        java.lang.String _getRXClaimsByMbrIDAndClient_memberModifier = smbrModID;
        java.lang.String _getRXClaimsByMbrIDAndClient_clientGuid = sCliID;
        com.optum.rqns.services.rxClaimsLookupTest.ServiceMetaData _getRXClaimsByMbrIDAndClient_metaData = new com.optum.rqns.services.rxClaimsLookupTest.ServiceMetaData();
        _getRXClaimsByMbrIDAndClient_metaData.setAppId("01d3fccafdd317b776011bfd3a695ce7");
       
            com.optum.rqns.services.rxClaimsLookupTest.RxClaimsInfo _getRXClaimsByMbrIDAndClient__return = port.getRXClaimsByMbrIDAndClient(_getRXClaimsByMbrIDAndClient_memberIdentifier, _getRXClaimsByMbrIDAndClient_memberModifier, _getRXClaimsByMbrIDAndClient_clientGuid, _getRXClaimsByMbrIDAndClient_metaData);
            System.out.println("getRXClaimsByMbrIDAndClient.result=" + _getRXClaimsByMbrIDAndClient__return);
            System.out.println("response");
          System.out.println(_getRXClaimsByMbrIDAndClient__return.getRxClaimDetails().get(0).memberIdentifier);
        //  _getRXClaimsByMbrIDAndClient__return.rxClaimDetails.get(0).memberGlobalId
       //   _getRXClaimsByMbrIDAndClient__return.getRxClaimDetails().get(0).
          RxClaimDetails oRecord = _getRXClaimsByMbrIDAndClient__return.getRxClaimDetails().get(0);
          
          String RX_CLAIM_RESPONSE_QUERY = " select a.mbr_id,  a.mbr_mod_id,a.clnt_guid, a.day_spl_cnt,  a.drg_qty,np.nppes_prov_fst_nm,";
          RX_CLAIM_RESPONSE_QUERY =RX_CLAIM_RESPONSE_QUERY +" np.nppes_prov_lst_nm, np.nppes_prov_midl_nm ,ndesc.ndc_cd,ndesc.ndc_desc,d.mbr_glb_id from a_rx_clm_ndc a";
          RX_CLAIM_RESPONSE_QUERY =RX_CLAIM_RESPONSE_QUERY +" left join d_cs_mbr_glb_id d on (a.cli_sk = d.cli_sk and  a.sub_cli_sk =d.sub_cli_sk and";
          RX_CLAIM_RESPONSE_QUERY =RX_CLAIM_RESPONSE_QUERY +" a.mbr_id = d.mbr_id and  a.mbr_mod_id = d.mbr_mod_id)   left join d_nppes_prov np  ";
          RX_CLAIM_RESPONSE_QUERY =RX_CLAIM_RESPONSE_QUERY +" on( a.clnt_guid = np.clnt_guid and  a.rx_clm_prov_npi = np.nppes_prov_npi_id)";
          RX_CLAIM_RESPONSE_QUERY =RX_CLAIM_RESPONSE_QUERY +" left join d_ndc_cd ndesc  on (a.NDC_CD=ndesc.NDC_CD) ";
          RX_CLAIM_RESPONSE_QUERY =RX_CLAIM_RESPONSE_QUERY +" where a.clnt_guid ='"+sCliID+"' and a.mbr_id ='"+smbrID+"' and a.mbr_mod_id ="+smbrModID;
       //   ResultSet rs1=DataBaseConnect.getRsList("TEST-DW", RX_CLAIM_QUERY);
      //    int iCount1=0;
        //   while (rs1.next()){
         // 	 smbrID = rs1.getString(1);
         // 	 smbrModID = rs1.getString(2);
         // 	 sCliID = rs1.getString(3);
        //   	break;
        //   }
        
          if (
        		  smbrID.equals(oRecord.memberIdentifier) &&
        		  smbrModID.equals(oRecord.memberModifierId) &&
          		sNdcCd.equals(oRecord.ndcCode) &&
          		sNdcDesc.equals(oRecord.ndcDesc) &&
          		sProvFstNm.equals(oRecord.providerFirstName) &&
          		sProvLstNm.equals(oRecord.providerLastName) &&
          		sProvMdlNm.equals(oRecord.providerMiddleName) &&
          		sQty.equals(oRecord.quantity) )
    
					{
						
			
          	sReturn="getEligibleMembers2  --------Passed:-------";
          	
          	 sReturn=sReturn+" ************************Request******************************************";
          	sReturn=sReturn+ " Member id- " + smbrID;
          	sReturn=sReturn+ " Member mod ID:- " +smbrModID;
          	sReturn=sReturn+ " Client:- " +sCliID;
          	
          	
          
          	
          	sReturn=sReturn+"************************Response******************************************";
          	sReturn=sReturn+ " Member Global ID- " + oRecord.memberGlobalId;
          	sReturn=sReturn+ " Member ID:- " +oRecord.memberIdentifier;
          	sReturn=sReturn+ " Member Mod ID:- " +oRecord.memberModifierId;
          	sReturn=sReturn+ " NDC Code- " + oRecord.ndcCode;
          	sReturn=sReturn+ "NDC Description:- " +oRecord.ndcDesc;
          	sReturn=sReturn+ " Provider first name:- " +oRecord.providerFirstName;
          	sReturn=sReturn+ " Provider Last Name- " + oRecord.providerLastName;
          	sReturn=sReturn+ " Provider Middle Name:- " +oRecord.providerMiddleName;
          	sReturn=sReturn+ " Quantity- " +oRecord.quantity;
          
          	
          }
          else
          {
          	sReturn="getEligibleMembers2  --------Failed:-------";
          	
          	 sReturn=sReturn+" ************************Request******************************************";
           	sReturn=sReturn+ " Member id- " + smbrID;
           	sReturn=sReturn+ " Member mod ID:- " +smbrModID;
           	sReturn=sReturn+ " Client:- " +sCliID;
           	
           	
           
           	
           	sReturn=sReturn+"************************Response******************************************";
           	sReturn=sReturn+ " Member Global ID- " + oRecord.memberGlobalId;
           	sReturn=sReturn+ " Member ID:- " +oRecord.memberIdentifier;
           	sReturn=sReturn+ " Member Mod ID:- " +oRecord.memberModifierId;
           	sReturn=sReturn+ " NDC Code- " + oRecord.ndcCode;
           	sReturn=sReturn+ "NDC Description:- " +oRecord.ndcDesc;
           	sReturn=sReturn+ " Provider first name:- " +oRecord.providerFirstName;
           	sReturn=sReturn+ " Provider Last Name- " + oRecord.providerLastName;
           	sReturn=sReturn+ " Provider Middle Name:- " +oRecord.providerMiddleName;
       
          }

           System.out.println("response");
           System.out.println(smbrID);
           System.out.println(smbrModID);
           System.out.println(sCliID);
          
        } catch (ServiceException_Exception e) { 
            System.out.println("Expected exception: ServiceException has occurred.");
            System.out.println(e.toString());
            //sReturn=sRequest;
            sReturn="Service failed msg:" + e.getMessage()+ " with request Member ID "+ smbrID+"----" + "member Mod ID "+ smbrModID + "--------Client " +sCliID;
        }
        catch(Exception e)
        { //sReturn=sRequest;
        	sReturn="Service failed msg:" + e.getMessage()+ " with request Member ID "+ smbrID+"----" + "member Mod ID "+ smbrModID + "--------Client " +sCliID;
        }
            }

        //System.exit(0);
		return sReturn;
    }

}
