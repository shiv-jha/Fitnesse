
package com.optum.rqns.services.medicareDemographyTest;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;

import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import com.optum.rqns.services.utils.DataBaseConnect;
import com.optum.rqns.services.utils.Utility;


/**
 * This class was generated by Apache CXF 2.7.18
 * 2017-08-11T17:10:23.380+05:30
 * Generated source version: 2.7.18
 * 
 */
public final class MemberDemographicService_MemberDemographicServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://services.rqns.optum.com/", "memberDemographicService");

    public MemberDemographicService_MemberDemographicServiceImplPort_Client() {
    }

    public  String medicareDemography() throws java.lang.Exception {
    
        String sType="";
        String salt_id="";
        String sClient="";
        String sMbrId="";
        String sMbrmodId="";
        String sSrcNm="";
        String sSubSrcNm="";
        String sCliNm="";
        String sReturn="";
        String sStrtDate="";
        String sEndDt="";
        String sFstNm="";
        String slstNm="";
        String sMdlNm="";
        String sDobDt="";
        String sGdrCd="";
        String sAdr1="";
        String sAdr2="";
        String sCityNm="";
        String sState="";
        String sZipCd="";
        String sTelNo="";
        
        
        
        		
        URL wsdlURL = MemberDemographicService_Service.WSDL_LOCATION;
      
        MemberDemographicService_Service ss = new MemberDemographicService_Service(wsdlURL, SERVICE_NAME);
        MemberDemographicService port = ss.getMemberDemographicServiceImplPort();  
        String sRequest="select alt.mbr_alt_id_typ_cd,alt.mbr_alt_id_val_txt,alt.clnt_guid,alt.mbr_id,alt.mbr_mod_id,alt.mbr_alt_id_adj_strt_dt,alt.mbr_alt_id_adj_end_dt";
        sRequest= sRequest+ " ,m.mbr_fst_nm,m.mbr_lst_nm,m.mbr_midl_nm,m.mbr_dob_dt,m.mbr_gdr_cd,ma.adr_ln_1_txt,ma.adr_ln_2_txt,ma.city_nm,ma.st_cd,ma.zip_cd,ma.tel_num_txt";
        sRequest= sRequest+ " from mbr_alt_id_adj alt inner join mbr m on ( m.mbr_id=alt.mbr_id and m.mbr_mod_id=alt.mbr_mod_id) ";
        sRequest= sRequest+ " inner join mbr_adr ma on(m.mbr_id=ma.mbr_id and m.mbr_mod_id=ma.mbr_mod_id)  and  alt.mbr_alt_id_typ_cd='HIC' and alt.clnt_guid not in('c78fc3ba-3f18-4b09-93a7-c365a36b9d63') order by alt.updt_dttm desc";
        System.out.println(sRequest);
        ResultSet rs=DataBaseConnect.getRsList("TEST", sRequest);
        //int iCount=0;
        while (rs.next()){
        	sType=rs.getString(1);
        	salt_id=rs.getString(2);
        	sClient=rs.getString(3);
        	sMbrId=rs.getString(4);
        	sMbrmodId=rs.getString(5);
        	sStrtDate=rs.getString(6);
        	 sEndDt=rs.getString(7);
             sFstNm=rs.getString(8);
             slstNm=rs.getString(9);
             sMdlNm=rs.getString(10);
             sDobDt=rs.getString(11);
             sGdrCd=rs.getString(12);
             sAdr1=rs.getString(13);
             sAdr2=rs.getString(14);
             sCityNm=rs.getString(15);
             sState=rs.getString(16);
             sZipCd=rs.getString(17);
             sTelNo=rs.getString(18);	
        	break;
        }
        
        String sRequest1="select src_sys_nm,sub_src_sys_nm,sub_cli_org_nm from vw_cs_clnt_guid_mod where clnt_guid='" + sClient +"' and cli_modifier="+sMbrmodId+" and src_Sys_cd='RADC_MBR'";
        System.out.println(sRequest1);
        ResultSet rs1=DataBaseConnect.getRsList("TEST", sRequest1);
       // int iCount1=0;
        while (rs1.next()){
        	sSrcNm=rs1.getString(1);
        	sSubSrcNm=rs1.getString(2);
        	sCliNm=rs1.getString(3);
        	break;
        }
        
        
        {
        	System.out.println(salt_id);
        	System.out.println(sCliNm);
        System.out.println("Invoking getMedicareMemberLatestDemographicInfo...");
        java.lang.String _getMedicareMemberLatestDemographicInfo_mbrHicNbr =salt_id;
        java.lang.String _getMedicareMemberLatestDemographicInfo_clientId = sCliNm;
        com.optum.rqns.services.medicareDemographyTest.ServiceMetaData _getMedicareMemberLatestDemographicInfo_metaData = new com.optum.rqns.services.medicareDemographyTest.ServiceMetaData();
        _getMedicareMemberLatestDemographicInfo_metaData.setAppId("9032afa9f3e34e6fd0e05e967be021f7");
        try {
            com.optum.rqns.services.medicareDemographyTest.MedicareMemberDemographicInfo _getMedicareMemberLatestDemographicInfo__return = port.getMedicareMemberLatestDemographicInfo(_getMedicareMemberLatestDemographicInfo_mbrHicNbr, _getMedicareMemberLatestDemographicInfo_clientId, _getMedicareMemberLatestDemographicInfo_metaData);
            System.out.println("getMedicareMemberLatestDemographicInfo.result=" + _getMedicareMemberLatestDemographicInfo__return);
           System.out.println("response");
            System.out.println( _getMedicareMemberLatestDemographicInfo__return.clientId);
            MedicareMemberDemographicInfo oRecord = _getMedicareMemberLatestDemographicInfo__return;
           
            if (sMbrId.equals(oRecord.mbrId) &&
            	
            		sMbrmodId.equals(oRecord.mbrModId) &&
            		sFstNm.equals(oRecord.mbrFstNm) &&
            		slstNm.equals(oRecord.mbrLstNm) &&
            		sMdlNm.equals(oRecord.mbrMidlNm) &&
            		sDobDt.equals(oRecord.mbrDob) &&
            		sGdrCd.equals(oRecord.mbrGdrCd) &&
            		sAdr1.equals(oRecord.addrLn1) &&
            		sAdr2.equals(oRecord.addrLn2) &&
            		sCityNm.equals(oRecord.city) &&
            		sState.equals(oRecord.state) &&
            		sZipCd.equals(oRecord.zipCd) &&
            		sTelNo.equals(oRecord.phoneNbr))
      
					{
						
			
            	 sReturn="getAcaMemberDemographicInfoByAltIdandClient  --------Passed:-------";
            	
            	 sReturn=sReturn+" ************************Request******************************************";
            	sReturn=sReturn+ " Alt ID:- " +salt_id;
            	sReturn=sReturn+ " Client name:- " +sCliNm;
            	
            
            	
            	sReturn=sReturn+"************************Response******************************************";
            	sReturn=sReturn+ " Member ID:- " +oRecord.mbrId;
            	sReturn=sReturn+ " Member Mod ID:- " +oRecord.mbrModId;
            	sReturn=sReturn+ " First Name:- " +oRecord.mbrFstNm;
            	sReturn=sReturn+ " Last Name:- " +oRecord.mbrLstNm;
            	
            	sReturn=sReturn+ " Middle Name:- " +oRecord.mbrMidlNm;
            	sReturn=sReturn+ " DOB - " +oRecord.mbrDob;
            	sReturn=sReturn+ " Gender:- " +oRecord.mbrGdrCd;
            	sReturn=sReturn+ " Adress1:- " +oRecord.addrLn1;
            	sReturn=sReturn+ " Address2:- " +oRecord.addrLn2;
            	sReturn=sReturn+ " City - " +oRecord.city;
            	sReturn=sReturn+ " State:- " +oRecord.state;
            	sReturn=sReturn+ " Zip:- " +oRecord.zipCd;
            	sReturn=sReturn+ " Phone:- " +oRecord.phoneNbr;
            	
            	
            }
            else
            {
            	sReturn="getAcaMemberDemographicInfoByAltIdandClient  --------Failed:-------";
            	
            	 sReturn=sReturn+" ************************Request******************************************";
             	sReturn=sReturn+ " Alt ID:- " +salt_id;
             	sReturn=sReturn+ " Client name:- " +sCliNm;
             	
             
             	
             	sReturn=sReturn+"************************Response******************************************";
             	sReturn=sReturn+ " Member ID:- " +oRecord.mbrId;
             	sReturn=sReturn+ " Member Mod ID:- " +oRecord.mbrModId;
             	sReturn=sReturn+ " First Name:- " +oRecord.mbrFstNm;
             	sReturn=sReturn+ " Last Name:- " +oRecord.mbrLstNm;
             	
             	sReturn=sReturn+ " Middle Name:- " +oRecord.mbrMidlNm;
             	sReturn=sReturn+ " DOB - " +oRecord.mbrDob;
             	sReturn=sReturn+ " Gender:- " +oRecord.mbrGdrCd;
             	sReturn=sReturn+ " Adress1:- " +oRecord.addrLn1;
             	sReturn=sReturn+ " Address2:- " +oRecord.addrLn2;
             	sReturn=sReturn+ " City - " +oRecord.city;
             	sReturn=sReturn+ " State:- " +oRecord.state;
             	sReturn=sReturn+ " Zip:- " +oRecord.zipCd;
             	sReturn=sReturn+ " Phone:- " +oRecord.phoneNbr;
            }
          
           //String sResponseSql="select m.mbr_id,m.mbr_mod_id ,m.mbr_fst_nm,m.mbr_lst_nm,m.mbr_midl_nm,m.mbr_dob_dt,m.mbr_gdr_cd,ma.adr_ln_1_txt ,ma.adr_ln_2_txt,ma.city_nm,ma.st_cd,ma.zip_cd,ma.tel_num_txt from mbr m, mbr_adr ma where m.mbr_id=ma.mbr_id and m.mbr_mod_id=ma.mbr_mod_id and  m.mbr_id='"+_getAcaMemberDemographicInfoByMbrIDAndClient_memberID+"' and m.mbr_mod_id='"+_getAcaMemberDemographicInfoByMbrIDAndClient_modifierID+"'";
        } catch (ServiceException_Exception e) { 
            System.out.println("Expected exception: ServiceException has occurred.");
            System.out.println(e.toString());
            // sReturn="Service failed";
             sReturn="Service failed msg:" + e.getMessage()+ " with request    Alt ID:- " +salt_id +  " Client name:- " +sCliNm;
        }  
        
        catch(Exception e)
        {
        	sReturn="Service failed msg:" + e.getMessage()+ " with request    Alt ID:- " +salt_id +  " Client name:- " +sCliNm;
        }
        
        
        
        /*
            }
     {
        System.out.println("Invoking getMedicareMemberListInfoByHicId...");
        com.optum.rqns.services.medicareDemographyTest.GetMedicareMemberListInfoByHicId _getMedicareMemberListInfoByHicId_getMedicareMemberListInfoByHicId = new com.optum.rqns.services.medicareDemographyTest.GetMedicareMemberListInfoByHicId();
        _getMedicareMemberListInfoByHicId_getMedicareMemberListInfoByHicId.setClientId("ClientId596814274");
        _getMedicareMemberListInfoByHicId_getMedicareMemberListInfoByHicId.setMbrHicNum("MbrHicNum-1529242145");
        com.optum.rqns.services.medicareDemographyTest.ServiceMetaData _getMedicareMemberListInfoByHicId_getMedicareMemberListInfoByHicIdMetaData = new com.optum.rqns.services.medicareDemographyTest.ServiceMetaData();
        _getMedicareMemberListInfoByHicId_getMedicareMemberListInfoByHicIdMetaData.setAppId("AppId978794801");
        _getMedicareMemberListInfoByHicId_getMedicareMemberListInfoByHicId.setMetaData(_getMedicareMemberListInfoByHicId_getMedicareMemberListInfoByHicIdMetaData);
        try {
            com.optum.rqns.services.medicareDemographyTest.GetMedicareMemberListInfoByHicIdResponse _getMedicareMemberListInfoByHicId__return = port.getMedicareMemberListInfoByHicId(_getMedicareMemberListInfoByHicId_getMedicareMemberListInfoByHicId);
            System.out.println("getMedicareMemberListInfoByHicId.result=" + _getMedicareMemberListInfoByHicId__return);

        } catch (ServiceException_Exception e) { 
            System.out.println("Expected exception: ServiceException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getMedicareMemberListInfoByCardId...");
        com.optum.rqns.services.medicareDemographyTest.GetMedicareMemberListInfoByCardId _getMedicareMemberListInfoByCardId_getMedicareMemberListInfoByCardId = new com.optum.rqns.services.medicareDemographyTest.GetMedicareMemberListInfoByCardId();
        _getMedicareMemberListInfoByCardId_getMedicareMemberListInfoByCardId.setClientId("ClientId550119996");
        _getMedicareMemberListInfoByCardId_getMedicareMemberListInfoByCardId.setMbrCardId("MbrCardId-589006465");
        com.optum.rqns.services.medicareDemographyTest.ServiceMetaData _getMedicareMemberListInfoByCardId_getMedicareMemberListInfoByCardIdMetaData = new com.optum.rqns.services.medicareDemographyTest.ServiceMetaData();
        _getMedicareMemberListInfoByCardId_getMedicareMemberListInfoByCardIdMetaData.setAppId("AppId395565919");
        _getMedicareMemberListInfoByCardId_getMedicareMemberListInfoByCardId.setMetaData(_getMedicareMemberListInfoByCardId_getMedicareMemberListInfoByCardIdMetaData);
        try {
            com.optum.rqns.services.medicareDemographyTest.GetMedicareMemberListInfoByCardIdResponse _getMedicareMemberListInfoByCardId__return = port.getMedicareMemberListInfoByCardId(_getMedicareMemberListInfoByCardId_getMedicareMemberListInfoByCardId);
            System.out.println("getMedicareMemberListInfoByCardId.result=" + _getMedicareMemberListInfoByCardId__return);
           

        } catch (ServiceException_Exception e) { 
            System.out.println("Expected exception: ServiceException has occurred.");
            System.out.println(e.toString());
        }
          */  }

       // System.exit(0);
		return sReturn;
    }

}
